name: Check latest CyberChef version

on:
  schedule:
    - cron: "21 */6 * * *"
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Set debug flag for manual workflow dispatch"
        required: false
        type: boolean

jobs:
  version_check:
    runs-on: ubuntu-22.04
    outputs:
      latest_release_tag: ${{ steps.latest_release_info.outputs.tag_name }}
      latest_release_version: ${{ steps.latest_release_info.outputs.version }}
      latest_release_file_name: ${{ steps.latest_release_info.outputs.file_name }}
      latest_release_download_url: ${{ steps.latest_release_info.outputs.download_url }}
      latest_release_is_new: ${{ steps.compare_version.outputs.version_changed }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          token: ${{ github.token }}
      - name: Get the latest version of CyberChef
        id: latest_release_info
        run: |
          curl -s https://api.github.com/repos/gchq/CyberChef/releases/latest | \
            jq -c '. |
               select(.prerelease == false) |
               {tag_name, version: .tag_name[1:], file_name: .assets[0].name, download_url: .assets[0].browser_download_url} | 
               to_entries |
               .[] |
               "\(.key)::\(.value)"' |
            xargs -I {} echo "::set-output name={}"
      - name: Compare with current version and output
        id: compare_version
        run: |
          cat package.json | \
            jq 'if .version != "${{ steps.latest_release_info.outputs.version }}" then .version else empty end' | \
            xargs -i -r echo "::set-output name=version_changed::true"

  compare_and_update:
    needs:
      - version_check
    if: ${{ needs.version_check.outputs.latest_release_is_new }}
    runs-on: ubuntu-22.04
    outputs:
      local_commit_ref: v${{ needs.version_check.outputs.latest_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: 18.x
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
      - name: Update version
        id: commit_version_file
        run: |
          npm config set sign-git-commit true
          npm config set sign-git-tag true
          npm version ${{ needs.version_check.outputs.latest_release_version }} -m "Version updated to: %s"
          git push --follow-tags

  trigger_build_workflow:
    if: ${{ needs.version_check.outputs.latest_release_is_new }}
    needs:
      - version_check
      - compare_and_update
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ needs.version_check.outputs.latest_release_version }}
      file_name: ${{ needs.version_check.outputs.latest_release_file_name }}
      download_url: ${{ needs.version_check.outputs.latest_release_download_url }}
      local_commit_ref: ${{ needs.compare_and_update.outputs.local_commit_ref }}

  debug_outputs:
    if: ${{ always() && inputs.debug_enabled }}
    needs:
      - version_check
      - compare_and_update
      - trigger_build_workflow
    runs-on: ubuntu-22.04
    steps:
      - name: Debug commit result
        run: echo '${{ toJSON(needs) }}'
