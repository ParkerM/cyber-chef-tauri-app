name: Check latest CyberChef version

on:
  schedule:
    - cron: "21 */6 * * *"
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Set debug flag for manual workflow dispatch"
        required: false
        type: boolean

jobs:
  get_latest_release:
    runs-on: ubuntu-22.04
    outputs:
      release_tag_name: ${{ steps.extract_props.outputs.tag_name }}
      release_version: ${{ steps.extract_props.outputs.version }}
      release_file_name: ${{ steps.extract_props.outputs.file_name }}
      release_download_url: ${{ steps.extract_props.outputs.download_url }}

    steps:
      - name: Get the latest version of CyberChef
        id: extract_props
        run: |
          curl -s https://api.github.com/repos/gchq/CyberChef/releases/latest | \
            jq -c '. |
               select(.prerelease == false) |
               {tag_name, version: .tag_name[1:], file_name: .assets[0].name, download_url: .assets[0].browser_download_url} | 
               to_entries |
               .[] |
               "\(.key)=\(.value)"' |
            xargs -n 1 echo >> $GITHUB_OUTPUT

  compare_local:
    runs-on: ubuntu-22.04
    outputs:
      update_available: ${{ steps.compare_version.outputs.version_changed }}
    needs:
      - get_latest_release
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          token: ${{ github.token }}
      - name: Check if latest release is newer than local
        id: compare_version
        env:
          RELEASE_VERSION: ${{ needs.get_latest_release.outputs.release_version }}
        run: |
          jq 'if .version != env.RELEASE_VERSION then true else false end' package.json | \
            xargs -i -r echo "version_changed={}" >> $GITHUB_OUTPUT

  update_local:
    runs-on: ubuntu-22.04
    if: fromJSON(needs.compare_local.outputs.update_available)
    outputs:
      local_commit_ref: ${{ steps.commit_version_file.outputs.version_tag }}
    needs:
      - get_latest_release
      - compare_local
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: 18.x
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
      - name: Update and tag local version
        id: commit_version_file
        run: |
          npm config set sign-git-commit true
          npm config set sign-git-tag true
          npm version ${{ needs.get_latest_release.outputs.release_version }} -m "Version updated to: %s"
          git push --follow-tags
          echo "version_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

  trigger_build_workflow:
    if: fromJSON(needs.compare_local.outputs.update_available)
    needs:
      - get_latest_release
      - compare_local
      - update_local
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ needs.get_latest_release.outputs.release_version }}
      file_name: ${{ needs.get_latest_release.outputs.release_file_name }}
      download_url: ${{ needs.get_latest_release.outputs.release_download_url }}
      local_commit_ref: ${{ needs.update_local.outputs.local_commit_ref }}

  debug_outputs:
#    if: ${{ always() && inputs.debug_enabled }}
    if: always() # todo re-enable debug flag
    needs:
      - get_latest_release
      - compare_local
      - update_local
    runs-on: ubuntu-22.04
    steps:
      - name: Debug commit result
        run: echo '${{ toJSON(needs) }}'
      - name: View context attributes
        uses: actions/github-script@v6
        with:
          script: console.log(context)
