name: Build release
defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version string for upstream release'
        required: true
        type: string
      file_name:
        description: 'File name of release artifact'
        type: string
        required: true
      download_url:
        description: 'Download URL for release artifact'
        type: string
        required: true

  workflow_call:
    inputs:
      version:
        description: 'Version string for upstream release'
        required: true
        type: string
      file_name:
        description: 'File name of release artifact'
        type: string
        required: true
      download_url:
        description: 'Download URL for release artifact'
        type: string
        required: true

jobs:
  fetch_and_build:
    strategy:
      matrix:
        platform: [ ubuntu-20.04, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 360
    steps:
      - uses: actions/checkout@v3.1.0
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@1.64
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo add-apt-repository ppa:savoury1/curl34 -y
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf \
            curl
          curl --version

      - name: Download latest artifact
        id: download_dist
        run: |
          curl -s -L --create-dirs --output-dir ./archive  -o ${{ inputs.file_name }} ${{ inputs.download_url }}
          unzip ./archive/${{ inputs.file_name }} -d ./dist/
          mv ./dist/CyberChef_v${{ inputs.version }}.html ./dist/index.html
          rm -rf ./archive/

      - name: Build and upload release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v${{ inputs.version }}
          releaseName: "App v${{ inputs.version }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
